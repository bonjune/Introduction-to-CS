# HW4_끝말잇기_나만의규칙.py

# ** 주의 **
# \n 없는 쪽으로 통일됨.
# '단어공격력' 및 '단어공격력_출력하기' 함수에서 len == 3 검사함.

"""
제출 시 입력하기

추가한 규칙
(여기 쓰기)

수정/추가한 함수
- (여기 쓰기)
- (여기 쓰기)
"""

""" 기능 """


def 낱말끈_보여주기_화살표(지금까지_낱말끈):
    지금까지_낱말끈길이 = len(지금까지_낱말끈)
    예쁜낱말끈 = []
    예쁜낱말끈 = 지금까지_낱말끈[0]
    for 낱말번호 in range(1, 지금까지_낱말끈길이):
        예쁜낱말끈 = 예쁜낱말끈 + "->" + 지금까지_낱말끈[낱말번호]
    print(예쁜낱말끈)


def 새낱말_입력():
    print("새낱말을 입력하세요.")
    새낱말 = input()
    return 새낱말


def 단어공격력_출력하기(사전주머니, 입력단어):
    입력단어_마지막글자 = 입력단어[len(입력단어) - 1]
    후보낱말주머니 = []
    for 단어번호 in range(0, len(사전주머니)):
        단어 = 사전주머니[단어번호]
        if 단어[0] == 입력단어_마지막글자 and len(단어) == 3:
            후보낱말주머니.append(단어)

    단어점수 = len(후보낱말주머니)
    if 단어점수 < 20:
        print("~~~ 효과는 굉장했다!!! ~~~")
    print("이을 수 있는 단어 개수:", 단어점수)


def 단어공격력(사전주머니, 입력단어):
    입력단어_마지막글자 = 입력단어[len(입력단어) - 1]
    후보낱말주머니 = []
    for 단어번호 in range(0, len(사전주머니)):
        단어 = 사전주머니[단어번호]
        if 단어[0] == 입력단어_마지막글자 and len(단어) == 3:
            후보낱말주머니.append(단어)

    단어점수 = len(후보낱말주머니)

    return 단어점수  # 달라진 return값 설정하기


def AI_입력(마지막_낱말, 사전_주머니, 중복단어_확인용_낱말끈):
    # 한방단어 후보낱말주머니 만들기
    후보낱말주머니 = []
    마지막낱말_마지막글자 = 마지막_낱말[len(마지막_낱말) - 1]
    사전_크기 = len(사전_주머니)

    for 단어번호 in range(0, 사전_크기):
        사전단어 = 사전_주머니[단어번호]
        사전단어_첫글자 = 사전단어[0]

        if 세글자_확인하기(사전단어) == True:
            if 사전단어_첫글자 == 마지막낱말_마지막글자:
                후보낱말주머니.append(사전단어)

    # 헷갈릴 수 있는 부분: 공격력 값은 낮을 수록 강하다.
    # 나올 수 있는 어떤 공격력보다 약한 공격력으로 초기화.
    비정상적인_공격력 = len(사전주머니)
    지금까지_최강공격력 = 비정상적인_공격력

    # 내가 한 방 단어를 넣어 버리면 AI가 에러내는 예외 해결방법
    if len(후보낱말주머니) == 0:
        print("입력: 포기")
        return "포기"

    for 후보단어_번호 in range(0, len(후보낱말주머니)):
        후보단어 = 후보낱말주머니[후보단어_번호]
        후보단어_공격력 = 단어공격력(사전_주머니, 후보단어)

        ########################################################################
        # AI의 규칙 자기검증
        적합한_후보인가 = True

        if 중복_확인하기(후보단어, 중복단어_확인용_낱말끈) == True:
            적합한_후보인가 = False

        if 후보단어_공격력 < 10:  # 후보단어_공격력 == 0 체크하는 부분 없어야 함.
            적합한_후보인가 = False

        if 적합한_후보인가 == True:
            if 후보단어_공격력 < 지금까지_최강공격력:
                지금까지_최강공격력 = 후보단어_공격력
                AI낱말 = 후보단어
        ########################################################################

    print("입력:", AI낱말)
    return AI낱말


""" 규칙 """


def 사전_확인하기(사전_주머니, 입력단어):
    사전크기 = len(사전_주머니)
    사전에있는가 = False
    for 사전번호 in range(0, 사전크기):
        if 사전_주머니[사전번호] == 입력단어:
            사전에있는가 = True
            break
    return 사전에있는가


def 중복_확인하기(입력단어, 확인할낱말끈):
    중복 = False
    for 낱말번호 in range(0, len(확인할낱말끈)):
        if 입력단어 == 확인할낱말끈[낱말번호]:
            중복 = True
            break

    if 중복 == True:
        return True
    else:
        return False


def 세글자_확인하기(입력단어):
    if len(입력단어) == 3:
        return True
    else:
        return False


"""메인프로그램"""
# 사전 불러오기
한글사전파일 = open("korean_noun_hard.txt", 'r', encoding='utf-8')
사전주머니 = 한글사전파일.readlines()
사전개수 = len(사전주머니)
한글사전파일.close()

# 사전주머니 속 단어들에서 '\n' 제거하기
for 단어번호 in range(사전개수):
    줄바꿈_있는_단어 = 사전주머니[단어번호]
    줄바꿈_없는_단어 = 줄바꿈_있는_단어.strip()
    사전주머니[단어번호] = 줄바꿈_없는_단어

# 낱말끈 준비하기
지금까지낱말끈 = []

# 시작 낱말 받기
print("시작낱말을 입력하세요.")
시작낱말 = input()
지금까지낱말끈.append(시작낱말)
마지막낱말 = 시작낱말

for 반복 in range(0, 9999999):
    낱말끈_보여주기_화살표(지금까지낱말끈)
    print("*******")  # 반복될때 마다 표시

    if 반복 % 2 == 0:

        print("AI의 차례입니다.")
        새낱말 = AI_입력(마지막낱말, 사전주머니, 지금까지낱말끈)
    else:
        print("당신의 차례입니다.")
        새낱말 = 새낱말_입력()

    # 글자수가 맞는가? ************************************************
    글자수가맞는가 = 세글자_확인하기(새낱말)
    if 글자수가맞는가 == False:
        print("*******")
        print("땡!! 글자수가 안 맞습니다.")
        break

    # 이어지는가? *****************************************************
    새낱말_첫글자 = 새낱말[0]
    지금까지낱말끈길이 = len(지금까지낱말끈)
    마지막낱말 = 지금까지낱말끈[지금까지낱말끈길이 - 1]
    마지막낱말_마지막글자 = 마지막낱말[len(마지막낱말) - 1]
    if not 새낱말_첫글자 == 마지막낱말_마지막글자:
        print("*******")
        print("땡!! 끝말잇기가 아닙니다.")
        break

    # 중복단어인가? ***************************************************
    나온낱말인가 = 중복_확인하기(새낱말, 지금까지낱말끈)
    if 나온낱말인가 == True:
        print("*******")
        print("땡!!!! 이미 나온 단어입니다.")
        break

    # 사전에 있는가? **************************************************
    사전에있는가 = 사전_확인하기(사전주머니, 새낱말)
    if 사전에있는가 == False:
        print("*******")
        print("땡!! 입력하신 단어는 없는 단어입니다.")
        break

    # 공격력이 합리적인가? *********************************************
    새낱말_공격력 = 단어공격력(사전주머니, 새낱말)
    if 새낱말_공격력 < 10:
        print("*******")
        print("땡!! 너무 강력한 단어입니다.")
        break

    마지막낱말 = 새낱말
    지금까지낱말끈.append(새낱말)
